#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int i=0, j=0;

char** gray(int n){
    if(n==1){
        char** arr = malloc(2*sizeof(char*));
        arr[0] = malloc(1*sizeof(char));
        arr[1] = malloc(1*sizeof(char));
        arr[0][0] = '0';
        arr[1][0] = '1';
        return arr;
    }
    else{
        char** prev = gray(n-1);
        char** all = malloc(pow(2,n)*sizeof(char*));
        for(i=0; i<pow(2,n); i++) all[i] = malloc(n*sizeof(char));
        
        for(i=0; i<pow(2,n); i++){
            for(j=0; j<n; j++){
                if(j==0){
                    if(i<pow(2,n-1)) all[i][0] = '0';
                    else all[i][0] = '1';
                }
                else{
                    if(i<pow(2,n-1)) all[i][j] = prev[i][j-1];
                    else all[i][j] = prev[ (int)pow(2,n)-1-i ][j-1];                    
                }
            }
        }
        return all;
    }
}

/*
0 7 8  15
1 6 9  14
2 5 10 13
3 4 11 12
down %8=0,1,2,3 %8<4
up   %8=4,5,6,7
*/

int** snake(int n){
    int** snake = malloc(n*sizeof(int*));
    for(i=0; i<n; i++) snake[i] = malloc(n*sizeof(int));
    
    for(i=0; i<n*n; i++){
        if(i%(2*n)<n) snake[i%n][i/n] = i;
        else snake[n-1-i%n][i/n] = i;
    }
    return snake;   
}

int main()
{
    int n=3;
    char** g = gray(n);
    for(i=0; i<pow(2,n); i++){
        for(j=0; j<n; j++){
            printf("%c", g[i][j]);
        }
        printf("\n");
    }
    
    printf("\n");
    int m=4;
    int** s = snake(m);
    for(i=0; i<m; i++){
        for(j=0; j<m; j++) printf("%d ", s[i][j]);
        printf("\n");
    }

    return 0;
}
